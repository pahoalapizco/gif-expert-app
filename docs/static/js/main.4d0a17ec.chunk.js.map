{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","URL","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categoria","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAkBhD,OACE,0BAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,OAMd,2BACEO,KAAK,OACLC,MAAOT,EACPU,SAlBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,Y,uBCRdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,gDACgCC,UAAUH,GAD1C,+DAEFI,MAAMF,GAFJ,cAEfG,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAG,YAAK,CAC5BC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QARf,kBAWdL,GAXc,4CAAH,sDCCPQ,EAAc,SAAC,GAAuB,EAArBL,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAEvC,OACE,yBAAKI,UAAU,QACb,yBACEA,UAAU,eACVC,IAAKL,EACLM,IAAKP,IAEP,uBAAGK,UAAU,aAAaL,KCPnBQ,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECDb,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SAAe,EAClBd,mBAAS,CACjCqB,KAAM,GACNc,SAAS,IAHiC,mBACrCC,EADqC,KAC9BC,EAD8B,KAe5C,OATAC,qBAAU,WACRzB,EAAQC,GAAUyB,MAAK,SAACC,GACtBH,EAAS,CACPhB,KAAMmB,EACNL,SAAS,SAGZ,CAACrB,IAEGsB,EDX0BK,CAAa,CAAE3B,aAAlCc,EAHyB,EAG/BP,KAAcc,EAHiB,EAGjBA,QAEtB,OACE,qCACKA,GAAY,4BAAMrB,GACnBqB,GAAW,cACb,yBAAKJ,UAAU,aAETH,EAAOL,KAAI,SAAAC,GAAG,OACZ,kBAAC,EAAD,eACEkB,IAAKlB,EAAIC,IACJD,UEdRmB,EAAe,WAAO,IAAD,EACI3C,mBAAS,CAAC,iBADd,mBACzBQ,EADyB,KACbT,EADa,KAGhC,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAE7B,6BAEA,6BAEIS,EAAWe,KAAI,SAAAqB,GAAS,OACtB,kBAAC,EAAD,CACEF,IAAME,EACN9B,SAAW8B,U,MCbzBC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.4d0a17ec.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  // estado\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  // funciones\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if(inputValue.trim().length > 2) {\r\n      setCategories(categories => [inputValue, ...categories]);\r\n      setInputValue('');\r\n    } \r\n  }\r\n\r\n  return(\r\n    <form onSubmit={ handleSubmit }>\r\n      <input \r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={ handleInputChange }\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n};\r\n","  // Funciones\r\nexport const getGifs = async (category) => {\r\n  const URL = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=CUx2xEU29TBOItE2I0YdinTSVRl2NHdq`;\r\n  const resp = await fetch(URL);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map(img => ({\r\n    id: img.id,\r\n    title: img.title,\r\n    url: img.images?.downsized_medium.url\r\n  }));\r\n  \r\n  return gifs\r\n};","import React from 'react';\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n  \r\n  return(\r\n    <div className=\"card\">\r\n      <img \r\n        className=\"card-img-top\"\r\n        src={url}\r\n        alt={title}\r\n      />\r\n      <p className=\"card-text\">{title}</p>\r\n    </div>\r\n  )\r\n};\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  // custom hook es el que tiene la logica y el estado.\r\n  // De esta forma el c√≥digo del componente queda mas prolijo.\r\n  const { data: images, loading} = useFetchGifs({ category  });\r\n  \r\n  return(\r\n    <>      \r\n      { !loading &&  <h3>{ category }</h3> }  \r\n      { loading && 'Loading....' }  \r\n      <div className=\"card-grid\">\r\n          { \r\n            images.map(img => (\r\n              <GifGridItem \r\n                key={img.id}\r\n                { ...img }\r\n              />\r\n            ))\r\n          }\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ({ category }) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setState({\r\n        data: imgs,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]); // al mandarle [] indica que solo se ejecutara cuando se renderiza por primera vez el componente\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n  const [categories, setCategories] = useState(['Harry Potter']);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>      \r\n      <AddCategory setCategories={ setCategories }/>\r\n\r\n      <hr />\r\n\r\n      <div>\r\n        { \r\n          categories.map(categoria => (\r\n            <GifGrid \r\n              key={ categoria } \r\n              category={ categoria } \r\n            />\r\n          ))\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n// export default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}